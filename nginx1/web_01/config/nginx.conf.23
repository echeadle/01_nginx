user www-data;

worker_processes auto;

events {
  worker_connections 1024;
}

http {

  include mime.types;
  # Configure microcache (fastcgi)
  #fast_cache_path /tmp/nginx_cache levels=1:2 keys_zone=ZONE_1:100m inactive=60m;
  #fast_cache_key "$scheme$request_method$host$request_uri";
  #add_header X-Cache $upstream_cache_status;
  
  gzip on;
  gzip_comp_level 3;
  gzip_types text/css;
  gzip_types text/javascript;

  # Buffer size for POST submissions
  client_body_buffer_size 10K;
  client_max_body_size 8m;

  # Buffer size for Headers
  client_header_buffer_size 1k;

  # Max time to receive client headers/body
  client_body_timeout 12;
  client_header_timeout 12;

  # Max time to keep a connection open for
  keepalive_timeout 15;

  # Max time for the client accept/receive a response
  send_timeout 10;

  # Skip buffering for static files
  sendfile on;

  # Optimise sendfile packets
  tcp_nopush on;

  server {

    listen 443 ssl;
    server_name 127.0.0.1;

    root /sites/demo;
    ssl_certificate /etc/nginx/ssl/self.crt;
    ssl_certificate_key /etc/nginx/ssl/self.key;

    index index.php index.html;

    location / {
      try_files $uri $uri/ =404;
    }

#    location ~\.php$ {
#      # Pass php requests to the php-fpm service (fastcgi)
#      include fastcgi.conf;
#      fastcgi_pass unix:/run/php/php7.1-fpm.sock;
#      fastcgi_cache ZONE_1;
#      Array directive can be on one line or many.
#       fastcgi_cache_valid 200 60m;
#       fastcgi_cache_valid 404 10m;
#    }
    
    location = ~*\.(css|js|jpg|png)$ {
        access_log off;
        add_header Cache-Control public;
        add_header Pragma public;
        add_header Vary Accept-encoding;
        expires 1M;
    }

  }
}
